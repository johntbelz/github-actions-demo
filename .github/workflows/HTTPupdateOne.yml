name: Atlas POST via http request
on:
    push:
        branches: [ "master", "app1", "app2", "app3" ]
    workflow_dispatch:
jobs:
    prepare-response:
        runs-on: ubuntu-latest
        outputs:
            response-made: ${{ steps.update-one.outputs.response}}
        steps:
        -   name: Update one
            id: update-one 
            uses: fjogeleit/http-request-action@v1
            with:
                url: 'https://us-east-1.aws.data.mongodb-api.com/app/data-vlwcn/endpoint/data/v1/action/findOne'
                method: 'POST'
                customHeaders: '{"Content-Type": "application/json", "Access-Control-Request-Headers": "*", "api-key": "${{ secrets.ATLAS_GITHUB_ACTIONS }}"}'
                data: '{ "collection":"devstudio", "database":"fiserv", "dataSource":"demoCluster", "filter": { "name": "John" } , "update": {"$set": {"test": "Updated with Github actions"}} }'
        -   name: Show Response
            run: |
                echo 'response: ${{ steps.update-one.outputs.response }}'
                echo 'header: ${{ steps.update-one.outputs.headers }}'
                echo 'email2: ${{ fromJson(steps.update-one.outputs.response).document.email}}'

    # confirm-response:
    #     needs: prepare-response
    #     runs-on: ubuntu-latest
    #     strategy:
    #         matrix:
    #             file: ${{ fromJson(needs.prepare-response.outputs.response-made) }}
    #     steps:
    #     -   name: Checkout
    #         uses: actions/checkout@v3
        
    #     -   name: Echo file
    #         run: |
    #             echo ${{ matrix.file }} # to test if the correct file was passed

# jobs:
#     deployment:
#       runs-on: ubuntu-latest
#       steps:
#       - name: Deploy Stage
#         uses: fjogeleit/http-request-action@v1
#         with:
#           url: 'https://data.mongodb-api.com/app/data-qbtmk/endpoint/data/v1/action/findOne'
#           method: 'POST'
#           username: ${{ secrets.AWX_USER }}
#           password: ${{ secrets.AWX_PASSWORD }}
#           customHeaders: '{"Content-Type": "application/json"}'
#           data: '{"key_1": "value_1", "key_2": "value_2"}'

# jobs:
#     deployment:
#       runs-on: ubuntu-latest
#       steps:
#       - name: Deploy Stage
#         uses: fjogeleit/http-request-action@v1
#         with:
#           url: 'https://data.mongodb-api.com/app/data-qbtmk/endpoint/data/v1/action/findOne'
#           method: 'POST'
#           username: ${{ secrets.AWX_USER }}
#           password: ${{ secrets.AWX_PASSWORD }}
#           customHeaders: '{"Content-Type": "application/json", "Access-Control-Request-Headers": "*", "api-key": "ss4YLpyU2RNqHXP00VxIlwi9nMJpxLGC0E1FCmlBgFclysZyTwgxx3jipuG0pdqJ", "Accept": "application/ejson"}'
#           data: '{ "collection":"devstudio", "database":"fiserv", "dataSource":"sandbox", "projection": {"_id": 1}}'

# curl --location --request POST 'https://data.mongodb-api.com/app/data-qbtmk/endpoint/data/v1/action/findOne' \
# --header 'Content-Type: application/json' \
# --header 'Access-Control-Request-Headers: *' \
# --header 'api-key: ss4YLpyU2RNqHXP00VxIlwi9nMJpxLGC0E1FCmlBgFclysZyTwgxx3jipuG0pdqJ' \
# --data-raw '{
#     "collection":"devstudio",
#     "database":"fiserv",
#     "dataSource":"sandbox",
#     "projection": {"_id": 1}
# }'
          
